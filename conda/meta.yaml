{% set git_cmd = "git describe --tags --always --abbrev=0" %}
{% set latest_tag = os.popen(git_cmd).read().strip() or 'vuntagged' %}
{% set git_tag = "main" %}
{% set version_postfix = "" %}
#{% set version_postfix = "i" %} # for installer packages

####
{% if git_tag != 'main' %}
{% set version_prefix = '_' + git_tag %}
{% else %}
{% set version_prefix = '' %}
{% endif %}

{% set version = ((latest_tag if latest_tag else '-failed') + version_prefix + version_postfix)[1:] %}

{% set number = environ.get('GIT_DESCRIBE_NUMBER', '0') %}
{% set hash = environ.get('GIT_DESCRIBE_HASH', '0') %}

package:
  name: trex
  version: "{{ version }}"

channels:
  - conda-forge     # [arm64 or linux]
  - pytorch
  - apple           # [arm64]
  - nodefaults      # [arm64]
source:
    git_url: https://github.com/mooch443/trex.git
    git_depth: 1
    git_tag: {{ git_tag }}

app:
  entry: trex
  icon: ../Application/src/tracker/gfx/TRex_1024.png
  summary: TRex
  type: console
  own_environment: True

build:
    script_env:
      - GITHUB_WORKFLOW
      - SDKROOT
      - CC
      - CXX
    number: 69
    string: "{{ hash }}_{{ number }}"
    run_exports:
        - {{ pin_compatible('libgcc-ng', min_pin='x.x.x', max_pin='x.x.x') }} # [linux]
        - {{ pin_compatible('libstdcxx-ng', min_pin='x.x.x', max_pin='x.x.x') }} # [linux]
    ignore_run_exports:
        - {{ pin_compatible('libstdcxx-ng', min_pin='x.x.x', max_pin='x.x.x') }} # [linux]
    detect_binary_files_with_prefix: False # [win]
    detect_binary_files_with_prefix: True # [not win]
    files_with_prefix:
        - bin/trex # [not win]
        - bin/pvinfo # [not win]
        - bin/pvconvert # [not win]
        - bin/TRex.app/Contents/MacOS/TRex # [osx]
    
requirements:
  build:
    - m2-filesystem         # [win]
    - m2w64-pkg-config      # [win]
    - pkg-config            # [not win]
    - jom                   # [win]
    - make                  # [unix]
    - {{ compiler('c') }}   # [not osx]
    - {{ compiler('cxx') }} # [not osx]
    - cmake >=3.20
    - git # [not win]
    - git <2.34|>=2.35 # [win]
    - {{ cdt('libselinux') }}  # [linux]
    - {{ cdt('libxdamage') }}  # [linux]
    - {{ cdt('libxxf86vm') }}  # [linux]
    - {{ cdt('libxext') }}     # [linux]
    - {{ cdt('xorg-x11-proto-devel') }}  # [linux]
    - {{ cdt('libx11-devel') }}          # [linux]
    - {{ cdt('libxcursor-devel') }}           # [linux]
    - {{ cdt('libxcb') }}                # [linux]
    - {{ cdt('libXfixes-devel') }}             # [linux]
    - {{ cdt('libXxf86vm') }}            # [linux]
    - {{ cdt('libxext-devel') }}         # [linux]
    - {{ cdt('libxinerama-devel') }}         # [linux]
    - {{ cdt('libxrandr-devel') }}       # [linux]
    - {{ cdt('libxi-devel') }}           # [linux]
    - {{ cdt('libxcursor-devel') }}           # [linux]
    - {{ cdt('libxrender-devel') }}      # [linux]
    - {{ cdt('mesa-libgl-devel') }}      # [linux]
    - {{ cdt('mesa-dri-drivers') }}      # [linux]
    - {{ cdt('libselinux') }}            # [linux]
    - {{ cdt('libXdamage-devel') }}            # [linux]
    - {{ cdt('libXau-devel') }}                # [linux]
    - {{ cdt('libuuid-devel') }} # [linux]
    - nasm

  host:
    - pthread-stubs  # [linux]
    - python =3.11 # [osx and arm64]
    - python =3.11 # [osx and not arm64]
    - python =3.11 # [win]
    - python =3.11 # [linux]
    - openblas # [arm64]
    - ffmpeg =6 # [osx and arm64]
    - ffmpeg >=4.3,<=6 # [win]
    - defaults::ffmpeg >=4,<=7 # [osx and not arm64]
    - defaults::ffmpeg =4.2.2 # [linux]
    - openh264 # [osx] 
    - numpy ==1.26.4 # [osx and not arm64]
    - numpy ==1.26.4 # [arm64]
    - numpy ==1.26.4 # [linux]
    - numpy ==1.26.4 # [win]

  run:
    - {{ pin_compatible('python', min_pin='x.x', max_pin='x.x') }}
    - {{ pin_compatible('ffmpeg', min_pin='x.x', max_pin='x.x') }}
    - {{ pin_compatible('openh264', min_pin='x.x', max_pin='x.x') }} # [osx]
    - {{ pin_compatible('numpy', min_pin='x.x.x', max_pin='x.x.x') }}
    - {{ pin_compatible('openblas', min_pin='x.x', max_pin='x.x') }} # [arm64]
    #- tensorflow-gpu =2 # [win]
    # disable tensorflow packages for install builds
    #- tensorflow-gpu =2.4.1 # [linux]
    #- tensorflow-estimator =2.4.1 # [linux]
    #- tensorflow >=2,<3   # [osx and not arm64]
    #- "pytorch::pytorch-mutex=*=cuda" # [linux or win]
    - "pytorch::pytorch>=2.1,<3=py3*" # [osx and not arm64]
    - "pytorch::pytorch<2.4=py3*" # [osx and arm64]
    - "pytorch::pytorch>=2.1,<3=py3*_cuda11.8_cudnn*" # [win or linux]
    #- "pytorch::pytorch-cuda=11.8" # [win or linux]
    - "pytorch::torchvision=*=py3*" # [osx]
    - "pytorch::torchvision=*=py3*_cu118" # [win or linux]
    - "torchmetrics"
    #- "cuda-version=11.8" # [win or linux]
    #- "cuda-cccl=11.8" # [win or linux]
    # disable this for install builds
    #- cudatoolkit =10.1 # [linux]
    #- cudatoolkit =11 # [win]
    #- cudnn # [win]
    # disable this for install builds
    #- cudnn =7.6 # [linux]
    #- mkl # [linux]
    - seaborn
    - scikit-learn
    - pip
    - requests

about:
  home: https://trex.run
  license: GPL3
  license_file:
      - LICENSE
      - Application/build/_deps/pybind11-src/LICENSE
      - Application/build/opencv/src/CustomOpenCV/LICENSE
      - Application/build/opencv_install/share/licenses/opencv4/ade-LICENSE  # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/ittnotify-LICENSE.GPL # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/ittnotify-LICENSE.BSD # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/libjpeg-turbo-LICENSE.md # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/libjpeg-turbo-README.md # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/libtiff-COPYRIGHT # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/protobuf-LICENSE # [not win]
      - Application/build/opencv_install/share/licenses/opencv4/SoftFloat-COPYING.txt # [not win]
      - Application/build/opencv_install/etc/licenses/ade-LICENSE  # [win]
      - Application/build/opencv_install/etc/licenses/ffmpeg-license.txt # [win]
      - Application/build/opencv_install/etc/licenses/ittnotify-LICENSE.GPL # [win]
      - Application/build/opencv_install/etc/licenses/ittnotify-LICENSE.BSD # [win]
      - Application/build/opencv_install/etc/licenses/libjpeg-turbo-LICENSE.md # [win]
      - Application/build/opencv_install/etc/licenses/libjpeg-turbo-README.md # [win]
      - Application/build/opencv_install/etc/licenses/libtiff-COPYRIGHT # [win]
      - Application/build/opencv_install/etc/licenses/protobuf-LICENSE # [win]
      - Application/build/opencv_install/etc/licenses/SoftFloat-COPYING.txt # [win]
      - licenses/glfw/LICENSE.md
      - licenses/robin-hood/LICENSE
      - licenses/flat_hash_map/LICENSE
      - licenses/libpng/LICENSE
      - licenses/libzip/LICENSE
      - licenses/zlib/README
  summary: TRex
  description: >
    TRex is an open source visual tracking software used to retrieve positional data from recorded collectives of individuals.
    It also provides support for direct recording from cameras.
  doc_url: https://trex.run/docs
  dev_url: https://github.com/mooch443/trex.git
